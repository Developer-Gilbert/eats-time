<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main">

	<select id="selectAllSitter" resultType="mainDTO">
      select product_name, product_price, product_date, product_expiration_date, 
      from tbl_product
      where user_title is not null and product_content is not null 
      <if test="keyword != null">
         and user_address like concat('%', #{keyword}, '%')
      </if>
   </select>
			

	<select id="selectAll" resultType="productDTO">
		select s.sale_content, b.* from tbl_sale s join
		(selectfile_name,a.*from tbl_file f 
		join ( select p.*, member_identification, member_name from tbl_member m
		join tbl_product p on m.member_id = p.member_id) a on f.file_id = a.file_id) b on s.product_id = b.product_id
		<where>
			<choose>
				<when test="category == 'pickUp'.toString()">
					product_category = '0'
				</when>
				<when test="category == 'send'.toString()">
					product_category = '1'
				</when>
			</choose>
		</where>

		<choose>
			<when test="sort=='recent'.toString()">
				order by product_id desc
			</when>
			<when test="sort=='lowPrice'.toString()">
				order by product_price asc
			</when>
			<when test="sort=='highPrice'.toString()">
				order by product_price desc
			</when>
		</choose>
		limit #{offset}, #{rowCount}
	</select>

<!-- <select id="getTotal" parameterType="Search" resultType="java.lang.Integer">
    select * from (
        select p.product_id, p.name, p.price, p.description, f.file_id, f.file_name, m.member_id, m.member_name
        from product p
        join file f on p.product_id = f.product_id
        join member m on p.member_id = m.member_id
        where p.name = #{name}
    ) as result;
</select> -->




</mapper>